import sys
import re
import json

def detect_vulnerability(file_path):
    results = []
    try:
        with open(file_path, 'r', encoding='utf-8') as file:
            content = file.read()
    except:
        return [{"loc": "0", "reason": "Failed to read file"}]
    
    lines = content.split('\n')
    
    # 正则表达式匹配漏洞模式：缺少UpdateDocMode导入和loadProperties设置
    update_doc_mode_import_pattern = re.compile(r'^\s*import\s+com\.sun\.star\.document\.UpdateDocMode;')
    load_properties_pattern = re.compile(r'^\s*loadProperties\.put\(')
    hidden_property_pattern = re.compile(r'^\s*loadProperties\.put\("Hidden",\s*true\);')
    read_only_property_pattern = re.compile(r'^\s*loadProperties\.put\("ReadOnly",\s*true\);')
    update_doc_mode_property_pattern = re.compile(r'^\s*loadProperties\.put\("UpdateDocMode",\s*UpdateDocMode\.NO_UPDATE\);')
    
    has_update_doc_mode_import = False
    has_load_properties = False
    has_hidden_property = False
    has_read_only_property = False
    has_update_doc_mode_property = False
    
    for line_num, line in enumerate(lines, 1):
        if update_doc_mode_import_pattern.search(line):
            has_update_doc_mode_import = True
        if load_properties_pattern.search(line):
            has_load_properties = True
        if hidden_property_pattern.search(line):
            has_hidden_property = True
        if read_only_property_pattern.search(line):
            has_read_only_property = True
        if update_doc_mode_property_pattern.search(line):
            has_update_doc_mode_property = True
    
    # 检测缺失的UpdateDocMode导入
    if not has_update_doc_mode_import:
        results.append({
            "loc": "Unknown",
            "reason": "Missing import for com.sun.star.document.UpdateDocMode"
        })
    
    # 检测缺失的loadProperties设置
    if not has_load_properties:
        results.append({
            "loc": "Unknown",
            "reason": "Missing loadProperties configuration in constructor"
        })
    
    # 检测缺失的Hidden属性设置
    if not has_hidden_property:
        results.append({
            "loc": "Unknown",
            "reason": "Missing loadProperties.put(\"Hidden\", true) in constructor"
        })
    
    # 检测缺失的ReadOnly属性设置
    if not has_read_only_property:
        results.append({
            "loc": "Unknown",
            "reason": "Missing loadProperties.put(\"ReadOnly\", true) in constructor"
        })
    
    # 检测缺失的UpdateDocMode属性设置
    if not has_update_doc_mode_property:
        results.append({
            "loc": "Unknown",
            "reason": "Missing loadProperties.put(\"UpdateDocMode\", UpdateDocMode.NO_UPDATE) in constructor"
        })
    
    return results

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print(json.dumps([{"loc": "0", "reason": "No file path provided"}]))
        sys.exit(1)
    
    file_path = sys.argv[1]
    results = detect_vulnerability(file_path)
    print(json.dumps(results))