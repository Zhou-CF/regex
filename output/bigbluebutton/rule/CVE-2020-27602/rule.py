import sys
import re
import json

def main():
    if len(sys.argv) < 2:
        print("[]")
        return

    file_path = sys.argv[1]
    try:
        with open(file_path, 'r', encoding='utf-8') as file:
            content = file.read()
    except:
        print("[]")
        return

    # 正则表达式匹配原始代码中直接设置用户ID和连接信息的部分
    pattern = r"""
        const\s+sessionId\s*=\s*`\$\{meetingId\}--\$\{requesterUserId\}`;\s*
        this\.setUserId\(sessionId\);\s*
        const\s+User\s*=\s*Users\.findOne\(\{\s*
            meetingId,\s*
            userId:\s*requesterUserId,\s*
        \}\);\s*
        if\s*\(\s*!User\s*\)\s*\{\s*
            createDummyUser\(meetingId,\s*requesterUserId,\s*requesterToken\);\s*
        \}\s*
        setConnectionIdAndAuthToken\(meetingId,\s*requesterUserId,\s*this\.connection\.id,\s*requesterToken\);
    """

    # 使用re.DOTALL使.匹配包括换行符在内的所有字符
    matches = re.finditer(pattern, content, re.VERBOSE | re.DOTALL)
    
    results = []
    for match in matches:
        start_line = content[:match.start()].count('\n') + 1
        results.append({
            "loc": str(start_line),
            "reason": "直接设置用户ID和连接信息而没有等待验证结果，可能导致未授权的连接保持打开状态"
        })
    
    print(json.dumps(results, indent=2))

if __name__ == "__main__":
    main()